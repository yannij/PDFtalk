Class {
	#name : #PtFAfmParsingTest,
	#superclass : #PtTests,
	#category : #'PDFtalk-Fonts tests'
}

{ #category : #Testing }
PtFAfmParsingTest >> testCharMetric [
	| bookString charMetric |
	bookString := 'C 102 ; WX 333 ; N f ; B 20 0 383 682 ; L i fi ; L l fl ;'.
	charMetric := PtFAfmParser new charMetricFrom: bookString.
	self assert: charMetric class = PtFCharacterMetric.
	self assert: charMetric c = 102.
	self assert: charMetric w = (333 @ 0).
	self assert: charMetric n = #f.
	self assert: charMetric b asSource = '(20 @ 0 corner: 383 @ 682)'.
	self assert: charMetric l asSource = '(Dictionary
	with: #i -> #fi
	with: #l -> #fl)'
]

{ #category : #Testing }
PtFAfmParsingTest >> testEmptyLines [
	| fontMetric |
	fontMetric := PtFAdobeFontMetric fromAfm: 'StartFontMetrics 2.0

FontName MinimalTest

FontBBox -164 -224 1066 961

EndFontMetrics
' readStream.
	self assert: fontMetric class name = #AdobeFontMetric.
	self assert: fontMetric fileFormatVersion = '2.0'.
	self assert: fontMetric fontName = 'MinimalTest'.
	self assert: fontMetric fontBBox asSource = '(-164 @ -224 corner: 1066 @ 961)'.
	self assert: fontMetric familyName = 'MinimalTest'
]

{ #category : #Testing }
PtFAfmParsingTest >> testFamilyName [
	| fontMetric |
	fontMetric := PtFAdobeFontMetric fromAfm: 'StartFontMetrics 2.0
Comment AFM Generated by Ghostscript/pf2afm
FontName HelveticaNeue-BoldCond
FullName Helvetica 77 Bold Condensed
FontBBox -164 -224 1066 961
EndFontMetrics' readStream.
	self assert: fontMetric class name = #AdobeFontMetric.
	self assert: fontMetric comment = 'AFM Generated by Ghostscript/pf2afm'.
	self assert: fontMetric fontName = 'HelveticaNeue-BoldCond'.
	self assert: fontMetric fullName = 'Helvetica 77 Bold Condensed'.
	self assert: fontMetric familyName = 'HelveticaNeue'
]

{ #category : #Testing }
PtFAfmParsingTest >> testKernPairs [
	| bookString kernPair |
	bookString := 'KPX V A -129'.
	kernPair := PtFAfmParser new kernPairFrom: bookString.
	self assert: kernPair class name = #KernPair.
	self assert: kernPair firstCharacter = #V.
	self assert: kernPair secondCharacter = #A.
	self assert: kernPair kerning = (-129 @ 0)
]

{ #category : #Testing }
PtFAfmParsingTest >> testKeyValue [
	| parser kv |
	parser := PtFAfmParser new.
	kv := parser keyAndValue: 'StartFontMetrics 2.0'.
	self assert: kv key = 'StartFontMetrics'.
	self assert: kv value = '2.0'.
	kv := parser keyAndValue: 'StartFontMetrics	2.0'.
	self assert: kv key = 'StartFontMetrics'.
	self assert: kv value = '2.0'.
	kv := parser keyAndValue: '	 	 StartFontMetrics	 	 	  	 	2.0 	 	'.
	self assert: kv key = 'StartFontMetrics'.
	self assert: kv value = '2.0'
]

{ #category : #Testing }
PtFAfmParsingTest >> testMinimalAFM [
	| fontMetric |
	fontMetric := PtFAdobeFontMetric fromAfm: 'StartFontMetrics 2.0
FontName MinimalTest
FontBBox -164 -224 1066 961
EndFontMetrics' readStream.
	self assert: fontMetric class name = #AdobeFontMetric.
	self assert: fontMetric fileFormatVersion = '2.0'.
	self assert: fontMetric fontName = 'MinimalTest'.
	self assert: fontMetric familyName = 'MinimalTest'
]

{ #category : #Testing }
PtFAfmParsingTest >> testMinimalUnorderedAFM [
	self
		should: [
		PtFAdobeFontMetric fromAfm: 'FullName MinimalTest
StartFontMetrics 2.0
EndFontMetrics' readStream]
		raise: Error.
	self
		should: [
		PtFAdobeFontMetric fromAfm: 'StartFontMetrics 2.0
EndFontMetrics
FullName MinimalTest
' readStream]
		raise: Error.
	self
		should: [
		PtFAdobeFontMetric fromAfm: 'StartFontMetrics 2.0
FullName MinimalTest
' readStream]
		raise: Error.
	self
		should: [
		PtFAdobeFontMetric fromAfm: 'FullName MinimalTest
' readStream]
		raise: Error.
	self
		should: [
		PtFAdobeFontMetric fromAfm: 'FullName MinimalTest
EndFontMetrics
' readStream]
		raise: Error
]

{ #category : #Testing }
PtFAfmParsingTest >> testNames [
	| fontMetric |
	fontMetric := PtFAdobeFontMetric fromAfm: 'StartFontMetrics 2.0
Comment AFM Generated by Ghostscript/pf2afm
FontName HelveticaNeue-BoldCond
FullName Helvetica 77 Bold Condensed
FamilyName Helvetica Neue
FontBBox -164 -224 1066 961
EndFontMetrics' readStream.
	self assert: fontMetric class name = #AdobeFontMetric.
	self assert: fontMetric comment = 'AFM Generated by Ghostscript/pf2afm'.
	self assert: fontMetric fontName = 'HelveticaNeue-BoldCond'.
	self assert: fontMetric fullName = 'Helvetica 77 Bold Condensed'.
	self assert: fontMetric familyName = 'Helvetica Neue'
]

{ #category : #Testing }
PtFAfmParsingTest >> testNoNameAFM [
	| fontMetric |
	fontMetric := PtFAdobeFontMetric fromAfm: 'StartFontMetrics 2.0
EndFontMetrics' readStream.
	self assert: fontMetric isNil
]

{ #category : #Testing }
PtFAfmParsingTest >> testTimesRoman [
	| afm |
	afm := PtFAdobeFontMetric fromAfm: PtFAdobeFontMetric abrevitatedTimesRomanString readStream.
	self assert: (afm isKindOf: PtFAdobeFontMetric)
]

{ #category : #Testing }
PtFAfmParsingTest >> testTwoComments [
	| fontMetric |
	fontMetric := PtFAdobeFontMetric fromAfm: 'StartFontMetrics 2.0
Comment AFM Generated by Ghostscript/pf2afm
FontName MinimalTest
Comment and now some extra comment
FontBBox -164 -224 1066 961
EndFontMetrics' readStream.
	self assert: fontMetric class name = #AdobeFontMetric.
	self assert: fontMetric comment = 'AFM Generated by Ghostscript/pf2afm
and now some extra comment'
]
